<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Border_spr</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>done=0;
good=0;
rating=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (Water_Transition_Screen)
{
    sprite_index=Water_Fallen;
}
instance_deactivate_object(Backyard_Enemy_Regular_obj);
instance_deactivate_object(Backyard_Enemy_Range_obj);
instance_deactivate_object(Wave2_Regular);
instance_deactivate_object(Wave2_Range);
if room=Level_1_1_Backyard_Tutorial
{
    good=1;
    with (Facts)
    {
        sprite_index=Fact_1;
        visible=true;
    }
    /**with (Water_Rating)
    {
        visible=true;
    }
    with (Water_Used)
    {
        visible=true;
    }*/
    with (Continue_obj)
    {
        visible=true;
    }
}
if room=Dog_House
{
    room_goto(Level_2_1_Forest);
}
if room=Level_2_1_Forest
{
    good=1;
    with (Facts)
    {
        sprite_index=Fact_2;
        visible=true;
    }
    /**with (Water_Rating)
    {
        visible=true;
    }
    with (Water_Used)
    {
        visible=true;
    }*/
     with (Continue_obj)
    {
        visible=true;
    }
}
if room=Cave_RM
{
    room_goto(Level_3_1_Neighboryard);
}
if room=Level_3_1_Neighboryard
{
    good=1;
    with (Facts)
    {
        sprite_index=Fact_3;
        visible=true;
    }
    /**with (Water_Rating)
    {
        visible=true;
    }
    with (Water_Used)
    {
        visible=true;
    }*/
     with (Continue_obj)
    {
        visible=true;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Billy_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if done!=1
{
    instance_create(view_xview[0],view_yview[0],Water_Transition_Screen);
    alarm[0]=21;
    done=1;
}
with (Billy_obj)
{
    x=xprevious;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
