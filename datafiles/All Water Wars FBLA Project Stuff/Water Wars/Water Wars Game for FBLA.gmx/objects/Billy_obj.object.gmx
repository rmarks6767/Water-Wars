<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Billy_Stationary_Right_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>done=0;
moveSpeed=15;
lives=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//Function for moving Keyboard
//Keyboard movements

if lives&gt;0 &amp;&amp; global.pause!=1
{
    if (keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('A'))) || (keyboard_check(ord('S')) &amp;&amp; keyboard_check(ord('W')))
    {
        Billy_Stationary_TwoKey_Script();
    }
    else
    {
        //Calls Script to move 'Up' when no key is pressed
        if keyboard_check(ord('W'))  
        {
            Billy_Up_Script();
        }
        else //Calls Script to remain 'Stationary' when no key is pressed
        {
            Billy_Stationary_Script(); 
        }
        
        //Calls Script to move 'Left'
        if keyboard_check(ord('A'))
        {
            Billy_Left_Script();
        
        }
        else //Calls Script to remain 'Stationary' when no key is pressed
        {
            Billy_Stationary_Script(); 
        }
        
        //Calls Script to move 'Down
        if keyboard_check(ord('S')) 
        {
            Billy_Down_Script();
        }
        else //Calls Script to remain 'Stationary' when no key is pressed
        {
            Billy_Stationary_Script(); 
        }
        //Calls Script to move 'Right'
        if keyboard_check(ord('D')) 
        {
            Billy_Right_Script();
        }
        else //Calls Script to remain 'Stationary' when no key is pressed
        {
            Billy_Stationary_Script(); 
        }
        if keyboard_check(ord('R'))
        {
            if health!=100 &amp;&amp; global.lives!=0
            {
                global.lives=global.lives-1;
                health=100;
            }
        }
    }
    
    //Calls Script to perform 'Jump' Action
    //can jump is a global variable
    /**if global.canjump=1
    {
        if keyboard_check(vk_space)
        {
            alarm[1]=15; //Calls for when he will fall
            alarm[0]=30; //Calls for when he will land
            Billy_Jump_Script(); //Calls for when he will rise
        }
    }*/
    
   
}
else
{
    moveSpeed=0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,16</point>
    <point>128,80</point>
    <point>112,264</point>
    <point>44,264</point>
    <point>16,96</point>
  </PhysicsShapePoints>
</object>
